- content_for :title do
  ol.breadcrumb.m-0.p-0
    li.breadcrumb-item.p-0
      = link_to 'Vos agendas', organisation_agent_path(current_organisation, current_agent)
    li.breadcrumb-item.p-0.ml-2
      | RDV
      |&nbsp;
      = rdv_title_for_agent(@rdv)
      - if @rdv.cancelled?
        span.badge.badge-danger

.row
  .col-md-6.mb-3
    .card
      .card-header = l(@rdv.starts_at.to_date, format: :human )
      .card-body
        p.card-text
          i.fa.fa-fw.fa-calendar>
          = link_to rdv_time_and_duration(@rdv), organisation_agent_path(current_organisation, @rdv.agents.first, selected_event_id: @rdv.id, date: @rdv.starts_at.to_date)
        - if @rdv.created_by_user?
          p.card-text
            i.fa.fa-fw.fa-at>
            | RDV pris sur Internet
        p.card-text
          i.fa.fa-fw.fa-info-circle>
          = @rdv.motif.name
        - if @rdv.phone?
          p.card-text
            i.fa.fa-fw.fa-phone>
            | RDV téléphonique
        - else
          p.card-text
            strong> Lieu :
            - if @rdv.home?
              | RDV à domicile
              = human_location(@rdv)
            - elsif @rdv.public_office?
              = human_location(@rdv)
        p.card-text
          strong> Professionnel(s) :
          = agents_to_sentence(@rdv)

        .row
          .col
            - if !@rdv.past? && !@rdv.cancelled?
              = link_to "Annuler", organisation_rdv_path(@rdv.organisation, @rdv, status: :excused), method: :put, class: "btn btn-outline-danger mr-1", data: { confirm: "Êtes-vous sûr de vouloir annuler ce rendez-vous ? L'usager recevra une notification de cette annulation."}
              | ou
            = link_to "Supprimer ❌", organisation_rdv_path(@rdv.organisation, @rdv), method: :delete, class: "btn btn-link text-danger", data: { confirm: "Êtes-vous sûr de vouloir supprimer ce rendez-vous ? Cette action est définitive et aucune notification ne sera envoyée à #{@rdv.users.map(&:full_name).to_sentence}."}

          .col.text-right
            = link_to "Modifier", edit_organisation_rdv_path(@rdv.organisation, @rdv), class: "btn btn-outline-primary", data: { rightbar: true }

    .card#notes
      .card-header Notes du RDV
      .card-body
        = simple_form_for(UserDiary.new, url: organisation_user_diaries_path(current_organisation, @rdv.users.first)) do |f|
          = f.input_field :user_ids, value: @rdv.users.map(&:id)[1..], as: :hidden
          = f.input :text, label: false
          = f.button :submit, "Enregistrer"
        hr
        - @rdv.notes.each do |note|
          p.card-text = note.text
          i.far.fa-calendar>
          = " le #{l(note.created_at.to_date)} par #{note.agent.full_name_and_service}"
          hr

  .col-md-6.mb-3

    - @rdv.users.each do |user|
      .card
        .card-header = user.full_name
        .card-body
          p.card-text
            i.fa.fa-fw.fa-phone>
            = user.phone_number
          p.card-text
            i.fa.fa-fw.fa-envelope>
            = user.email

    .card
      .card-header
        | Modifier le statut du RDV rapidement
      .card-body
        = simple_form_for(@rdv, url: status_organisation_rdv_path(@rdv.organisation)) do |f|
          = f.input :status, collection: Rdv.human_enum_collection(:status), as: :radio_buttons, label: ''
          .text-right= f.submit class: 'btn btn-secondary'

.row data-controller='versions' data-versions-url=organisation_rdv_versions_path(@rdv.organisation, @rdv, only: ['user_ids', 'agent_ids', 'duration_in_min', 'status', 'starts_at', 'lieu_id', 'location'])
  .col-md-12
    .card
      .card-header
        a[
          href="#history"
          data-action="click->versions#toggle"
          data-target="versions.title"
          data-text-close="🕵️‍♂️ Cacher l'historique des actions ˄"
          data-text-open="🕵️‍♂️ Afficher l'historique des actions ⌄"
        ]
          | 🕵️‍♂️ Afficher l'historique des actions ⌄
      #history.collapse class=(@uncollapsed_section == 'history' ? "show" : "") data-target="versions.body"
        .text-center.py-4
          .spinner.spinner-border
